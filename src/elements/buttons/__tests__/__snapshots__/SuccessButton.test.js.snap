// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SuccessButton /> dark: renders correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4280981615,
      4278638919,
    ]
  }
  enabled={true}
  endPoint={undefined}
  locations={null}
  onPress={[MockFunction]}
  rounded={false}
  startPoint={undefined}
  style={
    Array [
      Object {
        "borderRadius": 0,
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "opacity": 1,
      },
      undefined,
    ]
  }
>
  <MKTouchable
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    className={undefined}
    enabled={true}
    hitSlop={undefined}
    maskBorderRadius={2}
    maskColor="rgba(255,255,255,0.15)"
    maskDuration={200}
    maskEnabled={true}
    nativeID={undefined}
    onChange={[Function]}
    onLayout={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouch={[Function]}
    pointerEvents="box-only"
    rippleColor="rgba(255,255,255,0.2)"
    rippleDuration={200}
    rippleLocation="tapLocation"
    shadowAniEnabled={true}
    shadowColor="black"
    shadowOffset={
      Object {
        "height": 0,
        "width": 0,
      }
    }
    shadowOpacity={0}
    shadowRadius={0}
    style={
      Array [
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            },
            undefined,
          ],
          Object {},
        ],
        Object {
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
        },
      ]
    }
    testID={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      pointerEvents="none"
      size="small"
      style={
        Array [
          Object {
            "color": "white",
            "fontFamily": "Open Sans",
            "fontSize": 16,
            "fontWeight": "600",
          },
          undefined,
        ]
      }
    >
      Test
    </Text>
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0.15)",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "overflow": "hidden",
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        style={
          Object {
            "backgroundColor": "rgba(255,255,255,0.2)",
            "borderRadius": 0,
            "height": 0,
            "left": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0,
              },
            ],
            "width": 0,
          }
        }
      />
    </View>
  </MKTouchable>
</BVLinearGradient>
`;

exports[`<SuccessButton /> light: renders correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4280981615,
      4278638919,
    ]
  }
  enabled={true}
  endPoint={undefined}
  locations={null}
  onPress={[MockFunction]}
  rounded={false}
  startPoint={undefined}
  style={
    Array [
      Object {
        "borderRadius": 0,
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "opacity": 1,
      },
      undefined,
    ]
  }
>
  <MKTouchable
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    className={undefined}
    enabled={true}
    hitSlop={undefined}
    maskBorderRadius={2}
    maskColor="rgba(255,255,255,0.15)"
    maskDuration={200}
    maskEnabled={true}
    nativeID={undefined}
    onChange={[Function]}
    onLayout={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouch={[Function]}
    pointerEvents="box-only"
    rippleColor="rgba(255,255,255,0.2)"
    rippleDuration={200}
    rippleLocation="tapLocation"
    shadowAniEnabled={true}
    shadowColor="black"
    shadowOffset={
      Object {
        "height": 0,
        "width": 0,
      }
    }
    shadowOpacity={0}
    shadowRadius={0}
    style={
      Array [
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            },
            undefined,
          ],
          Object {},
        ],
        Object {
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
        },
      ]
    }
    testID={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      pointerEvents="none"
      size="small"
      style={
        Array [
          Object {
            "color": "white",
            "fontFamily": "Open Sans",
            "fontSize": 16,
            "fontWeight": "600",
          },
          undefined,
        ]
      }
    >
      Test
    </Text>
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0.15)",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "overflow": "hidden",
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        style={
          Object {
            "backgroundColor": "rgba(255,255,255,0.2)",
            "borderRadius": 0,
            "height": 0,
            "left": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0,
              },
            ],
            "width": 0,
          }
        }
      />
    </View>
  </MKTouchable>
</BVLinearGradient>
`;
