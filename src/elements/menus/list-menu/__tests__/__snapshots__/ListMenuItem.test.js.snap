// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListMenuItem /> dark: renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {},
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    className={undefined}
    separator={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#807c7c",
            "borderBottomColor": "#fcfcfc",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 20,
            "paddingTop": 0,
          },
          null,
        ],
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fcfcfc",
            "fontFamily": "Open Sans",
          },
          Array [
            Object {
              "fontFamily": "Lato",
            },
            undefined,
          ],
        ]
      }
    />
    Test
  </View>
</View>
`;

exports[`<ListMenuItem /> light: renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {},
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    className={undefined}
    separator={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#eae8e0",
            "borderBottomColor": "#4b4c4d",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 20,
            "paddingTop": 0,
          },
          null,
        ],
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Open Sans",
          },
          Array [
            Object {
              "fontFamily": "Lato",
            },
            undefined,
          ],
        ]
      }
    />
    Test
  </View>
</View>
`;

exports[`<ListMenuItem /> onPress return name props dark: renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {},
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    className={undefined}
    separator={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#807c7c",
            "borderBottomColor": "#fcfcfc",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 20,
            "paddingTop": 0,
          },
          null,
        ],
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fcfcfc",
            "fontFamily": "Open Sans",
          },
          Array [
            Object {
              "fontFamily": "Lato",
            },
            undefined,
          ],
        ]
      }
    />
    Test
  </View>
</View>
`;

exports[`<ListMenuItem /> onPress return name props light: renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {},
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    className={undefined}
    separator={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#eae8e0",
            "borderBottomColor": "#4b4c4d",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 20,
            "paddingTop": 0,
          },
          null,
        ],
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Open Sans",
          },
          Array [
            Object {
              "fontFamily": "Lato",
            },
            undefined,
          ],
        ]
      }
    />
    Test
  </View>
</View>
`;

exports[`<ListMenuItem /> separator: true dark: renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {},
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    className={undefined}
    separator={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#807c7c",
            "borderBottomColor": "#fcfcfc",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 20,
            "paddingTop": 0,
          },
          null,
        ],
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fcfcfc",
            "fontFamily": "Open Sans",
          },
          Array [
            Object {
              "fontFamily": "Lato",
            },
            undefined,
          ],
        ]
      }
    />
    Test
  </View>
</View>
`;

exports[`<ListMenuItem /> separator: true light: renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {},
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    className={undefined}
    separator={false}
    style={
      Array [
        Object {},
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#eae8e0",
            "borderBottomColor": "#4b4c4d",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 20,
            "paddingTop": 0,
          },
          null,
        ],
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Open Sans",
          },
          Array [
            Object {
              "fontFamily": "Lato",
            },
            undefined,
          ],
        ]
      }
    />
    Test
  </View>
</View>
`;
